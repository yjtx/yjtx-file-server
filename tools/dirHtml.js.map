{"version":3,"sources":["dirHtml.ts"],"names":["DirHtml","DirHtml.constructor","DirHtml.onGet","DirHtml.writeFile","DirHtml.getPreFile","DirHtml.getDir","DirHtml.getFile"],"mappings":"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","file":"dirHtml.js","sourcesContent":["/**\n * Created by yjtx on 16/2/4.\n */\nimport http = require('http');\nimport url = require('url');\nimport fs = require('fs');\nimport os = require(\"os\");\nimport params = require('./core/ParamsAnalyze');\n\nimport file = require('./core/FileUtil');\n\nexport class DirHtml {\n\n    private fileContent;\n\n    private localUrl:string;\n\n    onGet(url, localUrl, response) {\n        this.localUrl = localUrl;\n        var self = this;\n\n        if (false/*self.fileContent*/) {\n            self.writeFile(url, response);\n        }\n        else {\n            var realPath = file.joinPath(params.getParserRoot(), \"template/main.html\");\n            //self.fileContent = file.readBinary(realPath).toString();\n            self.fileContent = file.read(realPath);\n            self.writeFile(url, response);\n            //fs.readFile(realPath, \"binary\", function (err, file) {\n            //    if (err) {\n            //        response.writeHead(500, {\n            //            'Content-Type': 'text/plain'\n            //        });\n            //        response.end(err.toString());\n            //    } else {\n            //        self.fileContent = file;\n            //\n            //        self.writeFile(url, response);\n            //    }\n            //});\n        }\n    }\n\n    writeFile(url, response) {\n        var fileContent = this.fileContent;\n\n        var listr = \"\";\n        if (file.relative(url, this.localUrl)) {\n            listr += this.getPreFile(\"..\");\n        }\n\n        var list = file.getDirectoryListing(url, true);\n\n        for (var i:number = 0; i < list.length; i++) {\n            if (file.isDirectory(file.joinPath(url, list[i]))) {\n                listr += this.getDir(list[i]);\n            }\n            else {\n                listr += this.getFile(list[i]);\n            }\n        }\n        fileContent = fileContent.replace(/<ul>[\\s\\S]*<\\/ul>/, '<ul>' + listr + \"</ul>\");\n\n        var contentType = \"text/html\";\n        response.writeHead(200, {\n            'Content-Type': contentType,\n            //'Content-Length': fileContent.length,\n            'Access-Control-Allow-Origin': '*'\n        });\n        response.write(fileContent);\n        response.end();\n    }\n\n    private getPreFile(url):string {\n        return `<li class=\"list score_list\">\n        <div class=\"list_title list_div_1\" >\n        <a href=\"` + url + `/\">\n                <img src=\"__yjtx__/back.gif\">\n        <span class=\"txt\">` + 'Parent Directory' + `</span>\n            </a>\n            </div>\n            </li>`;\n    }\n\n    private getDir(fileName:string):string {\n        return `<li class=\"list score_list\">\n        <div class=\"list_title list_div_1\" >\n        <a href=\"` + fileName + `/\">\n                <img src=\"__yjtx__/folder.gif\">\n        <span class=\"txt\">` + fileName + `/</span>\n            </a>\n            </div>\n            </li>`;\n    }\n\n    private getFile(fileName:string):string {\n        return `<li class=\"list score_list\">\n        <div class=\"list_title list_div_1\" >\n        <a href=\"` + fileName + `\">\n                <img src=\"__yjtx__/text.gif\">\n        <span class=\"txt\">` + fileName + `</span>\n            </a>\n            </div>\n            </li>`;\n    }\n}"],"sourceRoot":"/source/"}