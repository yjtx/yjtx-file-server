{"version":3,"sources":["run.ts"],"names":["ProxyServer","ProxyServer.constructor","ProxyServer.startServer","ProxyServer.stopServer","ProxyServer.handleRequest","addLog"],"mappings":"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","file":"run.js","sourcesContent":["/**\n * Created by yjtx on 16/2/3.\n */\n\n\nimport http = require('http');\nimport fs = require('fs');\nimport net = require('net');\nimport url = require('url');\nimport {LocalFiles} from \"./localFiles\";\nimport {DirHtml} from \"./dirHtml\";\n\nimport file = require('./core/FileUtil');\n\nimport open = require('./open');\n\nclass ProxyServer {\n    host:string;\n    port:number;\n    localUrl:string;\n    server:http.Server;\n    private localFiles:LocalFiles;\n    private tempHtml:DirHtml;\n\n    public startServer(host:string, port:number, localUrl:string):void {\n        this.host = host;\n        this.port = port;\n        this.localUrl = localUrl;\n\n        this.localFiles = new LocalFiles();\n        this.tempHtml = new DirHtml();\n\n        this.server = http.createServer(this.handleRequest.bind(this));\n        this.server.listen(this.port, () => {\n            addLog(0, \"started\", \"proxy Server listening on: \" + this.host + \":\" + this.port);\n        });\n        this.server.addListener(\"error\", function () {\n            process.exit(1501);\n        })\n    }\n\n    public stopServer():void {\n\n    }\n\n    private handleRequest(request, response):void {\n        var tempUrl:string = file.joinPath(this.localUrl, request.url);\n\n        console.log(\"11 \" + request.url);\n\n        if (request.url.indexOf(\"__yjtx__\") >= 0) {//内部文件\n            this.localFiles.onGet(file.joinPath(params.getParserRoot(), \"template\", request.url.substring(request.url.indexOf(\"__yjtx__\"))), null, response);\n            return;\n        }\n\n        if (file.isDirectory(tempUrl)) {\n            if (file.exists(file.joinPath(tempUrl, \"index.php\"))) {\n                this.localFiles.onGet(file.joinPath(tempUrl, \"index.php\"), null, response);\n            }\n            //else if (file.exists(file.joinPath(tempUrl, \"index.htm\"))) {\n            //    this.localFiles.onGet(file.joinPath(tempUrl, \"index.htm\"), null, response);\n            //}\n            //else if (file.exists(file.joinPath(tempUrl, \"index.html\"))) {\n            //    this.localFiles.onGet(file.joinPath(tempUrl, \"index.html\"), null, response);\n            //}\n            else {\n                this.tempHtml.onGet(tempUrl, this.localUrl, response)\n            }\n        }\n        else {\n            this.localFiles.onGet(tempUrl, null, response);\n        }\n    }\n}\n\nfunction addLog(code:number, action:string, message:string):void {\n    var data = {\n        code: code,\n        ide: \"proxyserver\",\n        data: {\n            action: action,\n            message: message\n        }\n    };\n    console.log(JSON.stringify(data));\n}\n\nimport params = require('./core/ParamsAnalyze');\n\nimport {IPConfig} from \"./iPConfig\";\nvar ip = new IPConfig();\nvar host = params.getOption(\"--ip\") || ip.findIP();\n\nvar port = params.getOption(\"--port\") || 3000;\n\nvar localUrl = params.getOption(\"--url\") || \"\";\n\nvar server = new ProxyServer();\nserver.startServer(host, port, localUrl);\n\nopen.open(host + \":\" + port);"],"sourceRoot":"/source/"}