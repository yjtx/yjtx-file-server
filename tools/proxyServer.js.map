{"version":3,"sources":["proxyServer.ts"],"names":["ProxyServer","ProxyServer.constructor","ProxyServer.startServer","ProxyServer.stopServer","ProxyServer.getPath","ProxyServer.handleRequest"],"mappings":"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","file":"proxyServer.js","sourcesContent":["/**\n * Created by yjtx on 16/2/16.\n */\n\nimport http = require('http');\nimport fs = require('fs');\nimport net = require('net');\nimport url = require('url');\nimport {LocalFiles} from \"./localFiles\";\nimport {DirHtml} from \"./dirHtml\";\n\nimport file = require('./core/FileUtil');\nimport path = require(\"path\");\n\nimport params = require('./core/ParamsAnalyze');\n\nexport class ProxyServer {\n    host:string;\n    port:number;\n    localUrl:string;\n    server:http.Server;\n    private localFiles:LocalFiles;\n    private tempHtml:DirHtml;\n\n    public startServer(host:string, port:number, localUrl:string):void {\n        this.host = host;\n        this.port = port;\n        this.localUrl = localUrl;\n\n        this.localFiles = new LocalFiles();\n        this.tempHtml = new DirHtml();\n\n        this.server = http.createServer(this.handleRequest.bind(this));\n        this.server.listen(this.port, () => {\n            console.log(\"listening on: \\033[1;32;1m\" + this.host + \":\" + this.port + \"\\033[0m\");\n            console.log(\"local root: \\033[1;32;1m\" + path.resolve(this.localUrl) + \"\\033[0m\");\n        });\n        this.server.addListener(\"error\", function () {\n            process.exit(1501);\n        })\n    }\n\n    public stopServer():void {\n\n    }\n\n    private getPath(url:string):string {\n        var index1:number = url.indexOf(\"?\");\n        var index2:number = url.indexOf(\"#\");\n        if(index1 < 0) {\n            index1 = url.length;\n        }\n        if(index2 < 0) {\n            index2 = url.length;\n        }\n\n        return url.substring(0, Math.min(index1, index2));\n    }\n\n    private handleRequest(request, response):void {\n        var requestUrl:string = request.url;\n        requestUrl = decodeURIComponent(requestUrl);\n\n        var tempUrl:string = file.joinPath(this.localUrl, this.getPath(requestUrl));\n\n        if (requestUrl.indexOf(\"__yjtx__\") >= 0) {//内部文件\n            this.localFiles.onGet(file.joinPath(params.getParserRoot(), \"template\", requestUrl.substring(requestUrl.indexOf(\"__yjtx__\"))), null, response);\n            return;\n        }\n\n        if (file.isDirectory(tempUrl)) {\n            if (file.exists(file.joinPath(tempUrl, \"index.php\"))) {\n                this.localFiles.onGet(file.joinPath(tempUrl, \"index.php\"), null, response);\n            }\n            //else if (file.exists(file.joinPath(tempUrl, \"index.htm\"))) {\n            //    this.localFiles.onGet(file.joinPath(tempUrl, \"index.htm\"), null, response);\n            //}\n            //else if (file.exists(file.joinPath(tempUrl, \"index.html\"))) {\n            //    this.localFiles.onGet(file.joinPath(tempUrl, \"index.html\"), null, response);\n            //}\n            else {\n                this.tempHtml.onGet(tempUrl, this.localUrl, response)\n            }\n        }\n        else {\n            this.localFiles.onGet(tempUrl, null, response);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}