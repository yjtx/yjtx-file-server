{"version":3,"sources":["core/FileUtil.ts"],"names":["save","createDirectory","read","readBinary","copy","isDirectory","isSymbolicLink","isFile","_copy_file","_copy_dir","remove","rmdir","rename","getDirectory","getExtension","getFileName","getDirectoryListing","getDirectoryAllListing","search","searchByFunction","findFiles","exists","escapePath","joinPath","getRelativePath","basename","relative"],"mappings":"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AIA,CAACA,CAACA;IACxBA,IAAIA,CAACA;QACDA,IAAIA,IAAIA,GAAGA,EAAEA,CAACA,WAAWA,CAACA,IAAIA,CAACA,CAACA;IACpCA,CACAA;IAAAA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;QACPA,MAAMA,CAACA,EAAEA,CAACA;IACdA,CAACA;IACDA,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;IACzBA,EAAEA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;QACZA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,MAAMA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACnCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,IAAIA,GAAGA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YACtBA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACFA,IAAIA,CAACA,CAACA,CAACA,GAAGA,QAAQA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;YACtCA,CAACA;QACLA,CAACA;IACLA,CAACA;IACDA,IAAIA,CAACA,CAACA;QACFA,GAAGA,CAACA,CAACA,CAACA,GAAGA,MAAMA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YAC/BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,IAAIA,GAAGA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YACtBA,CAACA;QACLA,CAACA;IACLA,CAACA;IACDA,MAAMA,CAACA,IAAIA,CAACA;AAChBA,CAACA;AA3Be,2BAAmB,sBA2BlC,CAAA;AAED;;;;GAIG;AACH,gCAA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A,IAAIA,IAAIA,CAACA,CAACA,CAACA;YAC1BA,EAAEA,CAACA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACnBA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;YACpBA,CAACA;QACLA,CAACA;QACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA;YACjBA,IAAIA,GAAGA,GAAGA,SAASA,CAACA,MAAMA,CAACA;YAC3BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,GAAGA,GAAGA,GAAGA,CAACA,CAACA,IAAIA,GAAGA;gBACzCA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,GAAGA,GAAGA,EAAEA,GAAGA,CAACA,CAACA,WAAWA,EAAEA,IAAIA,SAASA,CAACA,CAACA,CAACA;gBACjEA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;YACpBA,CAACA;QACLA,CAACA;QACDA,IAAIA,CAACA,CAACA;YACFA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;QACpBA,CAACA;IACLA,CAACA;AACLA,CAACA;AAED;;GAEG;AACH,gBAAuB,IAAW;IAC9BC,IAAIA,GAAGA,UAAUA,CAACA,IAAIA,CAACA,CAACA;IACxBA,MAAMA,CAACA,EAAEA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;AAC/BA,CAACA;AAHe,cAAM,SAGrB,CAAA;AAED;;GAEG;AACH,oBAA2B,IAAW;IAClCC,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;QACNA,MAAMA,CAACA,EAAEA,CAACA;IACdA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;AACtCA,CAACA;AAJe,kBAAU,aAIzB,CAAA;AACD;;GAEG;AACH,kBAAyB,GAAU;IAAEC,kBAAoBA;SAApBA,WAAoBA,CAApBA,sBAAoBA,CAApBA,IAAoBA;QAApBA,iCAAoBA;;IACrDA,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,SAASA,CAACA,CAACA;IAC5CA,IAAIA,GAAGA,UAAUA,CAACA,IAAIA,CAACA,CAACA;IACxBA,MAAMA,CAACA,IAAIA,CAACA;AAChBA,CAACA;AAJe,gBAAQ,WAIvB,CAAA;AAGD,yBAAgC,GAAW,EAAE,QAAgB;IACzDC,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,QAAQA,CAACA,CAACA;IAC5CA,MAAMA,CAACA,UAAUA,CAACA,QAAQA,CAACA,CAACA;IAAAA,CAACA;AACjCA,CAACA;AAHe,uBAAe,kBAG9B,CAAA;AAED,kBAAyB,CAAS,EAAE,GAAY;IAC5CC,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,SAASA,CAACA,CAACA;IAChDA,IAAIA,GAAGA,UAAUA,CAACA,IAAIA,CAACA,CAACA;IACxBA,MAAMA,CAACA,IAAIA,CAACA;AAChBA,CAACA;AAJe,gBAAQ,WAIvB,CAAA;AAED,qBAAqB;AACrB,kBAAyB,IAAY,EAAE,EAAU;IAC7CC,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,SAASA,CAACA,CAACA;IAChDA,IAAIA,GAAGA,UAAUA,CAACA,IAAIA,CAACA,CAACA;IACxBA,MAAMA,CAACA,IAAIA,CAACA;AAChBA,CAACA;AAJe,gBAAQ,WAIvB,CAAA","file":"core/FileUtil.js","sourcesContent":["//////////////////////////////////////////////////////////////////////////////////////\n//\n//  Copyright (c) 2014-2015, Egret Technology Inc.\n//  All rights reserved.\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Egret nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY EGRET AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\n//  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n//  IN NO EVENT SHALL EGRET AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA,\n//  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\nimport FS = require(\"fs\");\nimport Path = require(\"path\");\n\nvar charset = \"utf-8\";\n\n/**\n * 保存数据到指定文件\n * @param path 文件完整路径名\n * @param data 要保存的数据\n */\nexport function save(path:string, data:any):void {\n    if (exists(path)) {\n        remove(path);\n    }\n    path = escapePath(path);\n    textTemp[path] = data;\n    createDirectory(Path.dirname(path));\n    FS.writeFileSync(path, data, charset);\n}\n/**\n * 创建文件夹\n */\nexport function createDirectory(path:string, mode?:any, made?:any):void {\n    path = escapePath(path);\n    if (mode === undefined) {\n        mode = 511 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    if (typeof mode === 'string')\n        mode = parseInt(mode, 8);\n    path = Path.resolve(path);\n\n    try {\n        FS.mkdirSync(path, mode);\n        made = made || path;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = createDirectory(Path.dirname(path), mode, made);\n                createDirectory(path, mode, made);\n                break;\n\n            default:\n                var stat;\n                try {\n                    stat = FS.statSync(path);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n    return made;\n}\n\nvar textTemp = {};\n/**\n * 读取文本文件,返回打开文本的字符串内容，若失败，返回\"\".\n * @param path 要打开的文件路径\n */\nexport function read(path:string,ignoreCache = false):string {\n    path = escapePath(path);\n    var text = textTemp[path];\n    if (text && !ignoreCache) {\n        return text;\n    }\n    try {\n        text = FS.readFileSync(path, charset);\n        text = text.replace(/^\\uFEFF/, '');\n    }\n    catch (err0) {\n        return \"\";\n    }\n    if (text) {\n        var ext = getExtension(path).toLowerCase();\n        if (ext == \"ts\" || ext == \"exml\") {\n            textTemp[path] = text;\n        }\n    }\n    return text;\n}\n\n/**\n * 读取字节流文件,返回字节流，若失败，返回null.\n * @param path 要打开的文件路径\n */\nexport function readBinary(path:string):any {\n    path = escapePath(path);\n    try {\n        var binary = FS.readFileSync(path);\n    }\n    catch (e) {\n        return null;\n    }\n    return binary;\n}\n\n/**\n * 复制文件或目录\n * @param source 文件源路径\n * @param dest 文件要复制到的目标路径\n */\nexport function copy(source:string, dest:string):void {\n    source = escapePath(source);\n    dest = escapePath(dest);\n    var stat = FS.lstatSync(source);\n    if (stat.isDirectory()) {\n        _copy_dir(source, dest);\n    }\n    else {\n        _copy_file(source, dest);\n    }\n}\n\nexport function isDirectory(path:string):boolean {\n    path = escapePath(path);\n    try {\n        var stat = FS.statSync(path);\n    }\n    catch (e) {\n        return false;\n    }\n    return stat.isDirectory();\n}\n\nexport function isSymbolicLink(path:string):boolean {\n    path = escapePath(path);\n    try {\n        var stat = FS.statSync(path);\n    }\n    catch (e) {\n        return false;\n    }\n    return stat.isSymbolicLink();\n}\n\nexport function isFile(path:string):boolean {\n    path = escapePath(path);\n    try {\n        var stat = FS.statSync(path);\n    }\n    catch (e) {\n        return false;\n    }\n    return stat.isFile();\n}\n\nfunction _copy_file(source_file, output_file) {\n    createDirectory(Path.dirname(output_file))\n    var byteArray = FS.readFileSync(source_file);\n    FS.writeFileSync(output_file, byteArray);\n}\n\nfunction _copy_dir(sourceDir, outputDir) {\n    createDirectory(outputDir);\n    var list = FS.readdirSync(sourceDir);\n    list.forEach(function (fileName) {\n        copy(Path.join(sourceDir, fileName), Path.join(outputDir, fileName));\n    });\n}\n\n/**\n * 删除文件或目录\n * @param path 要删除的文件源路径\n */\nexport function remove(path:string):void {\n    path = escapePath(path);\n    try {\n        FS.lstatSync(path).isDirectory()\n            ? rmdir(path)\n            : FS.unlinkSync(path);\n\n        getDirectoryListing(path);\n    }\n    catch (e) {\n    }\n}\n\nfunction rmdir(path) {\n    var files = [];\n    if (FS.existsSync(path)) {\n        files = FS.readdirSync(path);\n        files.forEach(function (file) {\n            var curPath = path + \"/\" + file;\n            if (FS.statSync(curPath).isDirectory()) {\n                rmdir(curPath);\n            }\n            else {\n                FS.unlinkSync(curPath);\n            }\n        });\n        FS.rmdirSync(path);\n    }\n}\n\nexport function rename(oldPath, newPath) {\n    if (isDirectory(oldPath)) {\n        FS.renameSync(oldPath, newPath);\n    }\n}\n\n/**\n * 返回指定文件的父级文件夹路径,返回字符串的结尾已包含分隔符。\n */\nexport function getDirectory(path:string):string {\n    path = escapePath(path);\n    return Path.dirname(path) + \"/\";\n}\n\n/**\n * 获得路径的扩展名,不包含点字符。\n */\nexport function getExtension(path:string):string {\n    path = escapePath(path);\n    var index = path.lastIndexOf(\".\");\n    if (index == -1)\n        return \"\";\n    var i = path.lastIndexOf(\"/\");\n    if (i > index)\n        return \"\";\n    return path.substring(index + 1);\n}\n\n/**\n * 获取路径的文件名(不含扩展名)或文件夹名\n */\nexport function getFileName(path:string):string {\n    if (!path)\n        return \"\";\n    path = escapePath(path);\n    var startIndex = path.lastIndexOf(\"/\");\n    var endIndex;\n    if (startIndex > 0 && startIndex == path.length - 1) {\n        path = path.substring(0, path.length - 1);\n        startIndex = path.lastIndexOf(\"/\");\n        endIndex = path.length;\n        return path.substring(startIndex + 1, endIndex);\n    }\n    endIndex = path.lastIndexOf(\".\");\n    if (endIndex == -1 || isDirectory(path))\n        endIndex = path.length;\n    return path.substring(startIndex + 1, endIndex);\n}\n/**\n * 获取指定文件夹下的文件或文件夹列表，不包含子文件夹内的文件。\n * @param path 要搜索的文件夹\n * @param relative 是否返回相对路径，若不传入或传入false，都返回绝对路径。\n */\nexport function getDirectoryListing(path:string, relative:boolean = false):string[] {\n    path = escapePath(path);\n    try {\n        var list = FS.readdirSync(path);\n    }\n    catch (e) {\n        return [];\n    }\n    var length = list.length;\n    if (!relative) {\n        for (var i = length - 1; i >= 0; i--) {\n            if (list[i].charAt(0) == \".\") {\n                list.splice(i, 1);\n            }\n            else {\n                list[i] = joinPath(path, list[i]);\n            }\n        }\n    }\n    else {\n        for (i = length - 1; i >= 0; i--) {\n            if (list[i].charAt(0) == \".\") {\n                list.splice(i, 1);\n            }\n        }\n    }\n    return list;\n}\n\n/**\n * 获取指定文件夹下全部的文件列表，包括子文件夹\n * @param path\n * @returns {any}\n */\nexport function getDirectoryAllListing(path:string):string[] {\n    var list = [];\n    if (isDirectory(path)) {\n        var fileList = getDirectoryListing(path);\n        for (var key in fileList) {\n            list = list.concat(getDirectoryAllListing(fileList[key]));\n        }\n\n        return list;\n    }\n\n    return [path];\n}\n\n/**\n * 使用指定扩展名搜索文件夹及其子文件夹下所有的文件\n * @param dir 要搜索的文件夹\n * @param extension 要搜索的文件扩展名,不包含点字符，例如：\"png\"。不设置表示获取所有类型文件。\n */\nexport function search(dir:string, extension?:string):string[] {\n    var list = [];\n    try {\n        var stat = FS.statSync(dir);\n    }\n    catch (e) {\n        return list;\n    }\n    if (stat.isDirectory()) {\n        findFiles(dir, list, extension, null);\n    }\n    return list;\n}\n/**\n * 使用过滤函数搜索文件夹及其子文件夹下所有的文件\n * @param dir 要搜索的文件夹\n * @param filterFunc 过滤函数：filterFunc(file:File):Boolean,参数为遍历过程中的每一个文件，返回true则加入结果列表\n */\nexport function searchByFunction(dir: string, filterFunc: Function, checkDir?:boolean):string[] {\n    var list = [];\n    try {\n        var stat = FS.statSync(dir);\n    }\n    catch (e) {\n        return list;\n    }\n    if (stat.isDirectory()) {\n        findFiles(dir, list, \"\", filterFunc, checkDir);\n    }\n    return list;\n}\n\n\nfunction findFiles(filePath:string, list:string[], extension:string, filterFunc?:Function, checkDir?:boolean) {\n    var files = FS.readdirSync(filePath);\n    var length = files.length;\n    for (var i = 0; i < length; i++) {\n        if (files[i].charAt(0) == \".\") {\n            continue;\n        }\n        var path = joinPath(filePath, files[i]);\n        var stat = FS.statSync(path);\n        if (stat.isDirectory()) {\n            if (checkDir) {\n                if (!filterFunc(path)) {\n                    continue;\n                }\n            }\n            findFiles(path, list, extension, filterFunc);\n        }\n        else if (filterFunc != null) {\n            if (filterFunc(path)) {\n                list.push(path);\n            }\n        }\n        else if (extension) {\n            var len = extension.length;\n            if (path.charAt(path.length - len - 1) == \".\" &&\n                path.substr(path.length - len, len).toLowerCase() == extension) {\n                list.push(path);\n            }\n        }\n        else {\n            list.push(path);\n        }\n    }\n}\n\n/**\n * 指定路径的文件或文件夹是否存在\n */\nexport function exists(path:string):boolean {\n    path = escapePath(path);\n    return FS.existsSync(path);\n}\n\n/**\n * 转换本机路径为Unix风格路径。\n */\nexport function escapePath(path:string):string {\n    if (!path)\n        return \"\";\n    return path.split(\"\\\\\").join(\"/\");\n}\n/**\n * 连接路径,支持传入多于两个的参数。也支持\"../\"相对路径解析。返回的分隔符为Unix风格。\n */\nexport function joinPath(dir:string, ...filename:string[]):string {\n    var path = Path.join.apply(null, arguments);\n    path = escapePath(path);\n    return path;\n}\n\n\nexport function getRelativePath(dir: string, filename: string) {\n    var relative = Path.relative(dir, filename);\n    return escapePath(relative);;\n}\n\nexport function basename(p: string, ext?: string): string {\n    var path = Path.basename.apply(null, arguments);\n    path = escapePath(path);\n    return path;\n}\n\n//获取相对路径 to相对于from的路径\nexport function relative(from: string, to: string) {\n    var path = Path.relative.apply(null, arguments);\n    path = escapePath(path);\n    return path;\n}\n"],"sourceRoot":"/source/"}